typedef enum {
 X86_EAX = 0,
 X86_ECX = 1,
 X86_EDX = 2,
 X86_EBX = 3,
 X86_ESP = 4,
 X86_EBP = 5,
 X86_ESI = 6,
 X86_EDI = 7,
 X86_NREG
} X86_Reg_No;
typedef enum {
 X86_XMM0,
 X86_XMM1,
 X86_XMM2,
 X86_XMM3,
 X86_XMM4,
 X86_XMM5,
 X86_XMM6,
 X86_XMM7,
 X86_XMM_NREG
} X86_XMM_Reg_No;
typedef enum {
 X86_ADD = 0,
 X86_OR = 1,
 X86_ADC = 2,
 X86_SBB = 3,
 X86_AND = 4,
 X86_SUB = 5,
 X86_XOR = 6,
 X86_CMP = 7,
 X86_NALU
} X86_ALU_Opcode;
typedef enum {
 X86_SHLD,
 X86_SHLR,
 X86_ROL = 0,
 X86_ROR = 1,
 X86_RCL = 2,
 X86_RCR = 3,
 X86_SHL = 4,
 X86_SHR = 5,
 X86_SAR = 7,
 X86_NSHIFT = 8
} X86_Shift_Opcode;
typedef enum {
 X86_FADD = 0,
 X86_FMUL = 1,
 X86_FCOM = 2,
 X86_FCOMP = 3,
 X86_FSUB = 4,
 X86_FSUBR = 5,
 X86_FDIV = 6,
 X86_FDIVR = 7,
 X86_NFP = 8
} X86_FP_Opcode;
typedef enum {
 X86_CC_EQ = 0, X86_CC_E = 0, X86_CC_Z = 0,
 X86_CC_NE = 1, X86_CC_NZ = 1,
 X86_CC_LT = 2, X86_CC_B = 2, X86_CC_C = 2, X86_CC_NAE = 2,
 X86_CC_LE = 3, X86_CC_BE = 3, X86_CC_NA = 3,
 X86_CC_GT = 4, X86_CC_A = 4, X86_CC_NBE = 4,
 X86_CC_GE = 5, X86_CC_AE = 5, X86_CC_NB = 5, X86_CC_NC = 5,
 X86_CC_LZ = 6, X86_CC_S = 6,
 X86_CC_GEZ = 7, X86_CC_NS = 7,
 X86_CC_P = 8, X86_CC_PE = 8,
 X86_CC_NP = 9, X86_CC_PO = 9,
 X86_CC_O = 10,
 X86_CC_NO = 11,
 X86_NCC
} X86_CC;
enum {
 X86_FP_C0 = 0x100,
 X86_FP_C1 = 0x200,
 X86_FP_C2 = 0x400,
 X86_FP_C3 = 0x4000,
 X86_FP_CC_MASK = 0x4500
};
enum {
 X86_FPCW_INVOPEX_MASK = 0x1,
 X86_FPCW_DENOPEX_MASK = 0x2,
 X86_FPCW_ZERODIV_MASK = 0x4,
 X86_FPCW_OVFEX_MASK = 0x8,
 X86_FPCW_UNDFEX_MASK = 0x10,
 X86_FPCW_PRECEX_MASK = 0x20,
 X86_FPCW_PRECC_MASK = 0x300,
 X86_FPCW_ROUNDC_MASK = 0xc00,
 X86_FPCW_PREC_SINGLE = 0,
 X86_FPCW_PREC_DOUBLE = 0x200,
 X86_FPCW_PREC_EXTENDED = 0x300,
 X86_FPCW_ROUND_NEAREST = 0,
 X86_FPCW_ROUND_DOWN = 0x400,
 X86_FPCW_ROUND_UP = 0x800,
 X86_FPCW_ROUND_TOZERO = 0xc00
};
typedef enum {
 X86_LOCK_PREFIX = 0xF0,
 X86_REPNZ_PREFIX = 0xF2,
 X86_REPZ_PREFIX = 0xF3,
 X86_REP_PREFIX = 0xF3,
 X86_CS_PREFIX = 0x2E,
 X86_SS_PREFIX = 0x36,
 X86_DS_PREFIX = 0x3E,
 X86_ES_PREFIX = 0x26,
 X86_FS_PREFIX = 0x64,
 X86_GS_PREFIX = 0x65,
 X86_UNLIKELY_PREFIX = 0x2E,
 X86_LIKELY_PREFIX = 0x3E,
 X86_OPERAND_PREFIX = 0x66,
 X86_ADDRESS_PREFIX = 0x67
} X86_Prefix;
static const unsigned char
x86_cc_unsigned_map [X86_NCC] = {
 0x74,
 0x75,
 0x72,
 0x76,
 0x77,
 0x73,
 0x78,
 0x79,
 0x7a,
 0x7b,
 0x70,
 0x71,
};
static const unsigned char
x86_cc_signed_map [X86_NCC] = {
 0x74,
 0x75,
 0x7c,
 0x7e,
 0x7f,
 0x7d,
 0x78,
 0x79,
 0x7a,
 0x7b,
 0x70,
 0x71,
};
typedef union {
 int val;
 unsigned char b [4];
} x86_imm_buf;
typedef enum {
 X86_SSE_SQRT = 0x51,
 X86_SSE_RSQRT = 0x52,
 X86_SSE_RCP = 0x53,
 X86_SSE_ADD = 0x58,
 X86_SSE_DIV = 0x5E,
 X86_SSE_MUL = 0x59,
 X86_SSE_SUB = 0x5C,
 X86_SSE_MIN = 0x5D,
 X86_SSE_MAX = 0x5F,
 X86_SSE_COMP = 0xC2,
 X86_SSE_AND = 0x54,
 X86_SSE_ANDN = 0x55,
 X86_SSE_OR = 0x56,
 X86_SSE_XOR = 0x57,
 X86_SSE_UNPCKL = 0x14,
 X86_SSE_UNPCKH = 0x15,
 X86_SSE_ADDSUB = 0xD0,
 X86_SSE_HADD = 0x7C,
 X86_SSE_HSUB = 0x7D,
 X86_SSE_MOVSHDUP = 0x16,
 X86_SSE_MOVSLDUP = 0x12,
 X86_SSE_MOVDDUP = 0x12,
 X86_SSE_PAND = 0xDB,
 X86_SSE_POR = 0xEB,
 X86_SSE_PXOR = 0xEF,
 X86_SSE_PADDB = 0xFC,
 X86_SSE_PADDW = 0xFD,
 X86_SSE_PADDD = 0xFE,
 X86_SSE_PADDQ = 0xD4,
 X86_SSE_PSUBB = 0xF8,
 X86_SSE_PSUBW = 0xF9,
 X86_SSE_PSUBD = 0xFA,
 X86_SSE_PSUBQ = 0xFB,
 X86_SSE_PMAXSB = 0x3C,
 X86_SSE_PMAXSW = 0xEE,
 X86_SSE_PMAXSD = 0x3D,
 X86_SSE_PMAXUB = 0xDE,
 X86_SSE_PMAXUW = 0x3E,
 X86_SSE_PMAXUD = 0x3F,
 X86_SSE_PMINSB = 0x38,
 X86_SSE_PMINSW = 0xEA,
 X86_SSE_PMINSD = 0x39,
 X86_SSE_PMINUB = 0xDA,
 X86_SSE_PMINUW = 0x3A,
 X86_SSE_PMINUD = 0x3B,
 X86_SSE_PAVGB = 0xE0,
 X86_SSE_PAVGW = 0xE3,
 X86_SSE_PCMPEQB = 0x74,
 X86_SSE_PCMPEQW = 0x75,
 X86_SSE_PCMPEQD = 0x76,
 X86_SSE_PCMPEQQ = 0x29,
 X86_SSE_PCMPGTB = 0x64,
 X86_SSE_PCMPGTW = 0x65,
 X86_SSE_PCMPGTD = 0x66,
 X86_SSE_PCMPGTQ = 0x37,
 X86_SSE_PSADBW = 0xf6,
 X86_SSE_PSHUFD = 0x70,
 X86_SSE_PUNPCKLBW = 0x60,
 X86_SSE_PUNPCKLWD = 0x61,
 X86_SSE_PUNPCKLDQ = 0x62,
 X86_SSE_PUNPCKLQDQ = 0x6C,
 X86_SSE_PUNPCKHBW = 0x68,
 X86_SSE_PUNPCKHWD = 0x69,
 X86_SSE_PUNPCKHDQ = 0x6A,
 X86_SSE_PUNPCKHQDQ = 0x6D,
 X86_SSE_PACKSSWB = 0x63,
 X86_SSE_PACKSSDW = 0x6B,
 X86_SSE_PACKUSWB = 0x67,
 X86_SSE_PACKUSDW = 0x2B,
 X86_SSE_PADDUSB = 0xDC,
 X86_SSE_PADDUSW = 0xDD,
 X86_SSE_PSUBUSB = 0xD8,
 X86_SSE_PSUBUSW = 0xD9,
 X86_SSE_PADDSB = 0xEC,
 X86_SSE_PADDSW = 0xED,
 X86_SSE_PSUBSB = 0xE8,
 X86_SSE_PSUBSW = 0xE9,
 X86_SSE_PMULLW = 0xD5,
 X86_SSE_PMULLD = 0x40,
 X86_SSE_PMULHUW = 0xE4,
 X86_SSE_PMULHW = 0xE5,
 X86_SSE_PMULUDQ = 0xF4,
 X86_SSE_PMOVMSKB = 0xD7,
 X86_SSE_PSHIFTW = 0x71,
 X86_SSE_PSHIFTD = 0x72,
 X86_SSE_PSHIFTQ = 0x73,
 X86_SSE_SHR = 2,
 X86_SSE_SAR = 4,
 X86_SSE_SHL = 6,
 X86_SSE_PSRLW_REG = 0xD1,
 X86_SSE_PSRAW_REG = 0xE1,
 X86_SSE_PSLLW_REG = 0xF1,
 X86_SSE_PSRLD_REG = 0xD2,
 X86_SSE_PSRAD_REG = 0xE2,
 X86_SSE_PSLLD_REG = 0xF2,
 X86_SSE_PSRLQ_REG = 0xD3,
 X86_SSE_PSLLQ_REG = 0xF3,
 X86_SSE_PREFETCH = 0x18,
 X86_SSE_MOVNTPS = 0x2B,
  X86_SSE_MOVHPD_REG_MEMBASE = 0x16,
  X86_SSE_MOVHPD_MEMBASE_REG = 0x17,
  X86_SSE_MOVSD_REG_MEMBASE = 0x10,
  X86_SSE_MOVSD_MEMBASE_REG = 0x11,
 X86_SSE_PINSRB = 0x20,
 X86_SSE_PINSRW = 0xC4,
 X86_SSE_PINSRD = 0x22,
 X86_SSE_PEXTRB = 0x14,
 X86_SSE_PEXTRW = 0xC5,
 X86_SSE_PEXTRD = 0x16,
 X86_SSE_SHUFP = 0xC6,
 X86_SSE_CVTDQ2PD = 0xE6,
 X86_SSE_CVTDQ2PS = 0x5B,
 X86_SSE_CVTPD2DQ = 0xE6,
 X86_SSE_CVTPD2PS = 0x5A,
 X86_SSE_CVTPS2DQ = 0x5B,
 X86_SSE_CVTPS2PD = 0x5A,
 X86_SSE_CVTTPD2DQ = 0xE6,
 X86_SSE_CVTTPS2DQ = 0x5B,
} X86_SSE_Opcode;
int main() {
 unsigned char code [16000];
 unsigned char *p = code;
 unsigned char *target, *start, *end;
 unsigned long mem_addr = 0xdeadbeef;
 int size, i;
 printf (".text\n.align 4\n.globl main\n.type main,@function\nmain:\n");
 do { unsigned i, m = 1; do { do {} while (0); *((p))++ = (unsigned char)0xc8; do { *(short*)(((p))) = (((16))); (((p))) += 2; } while (0); *((p))++ = 0; } while (0); for (i = 0; i < X86_NREG; ++i, m <<= 1) { if ((((1<<X86_EBX) | (1<<X86_EBP) | (1<<X86_ESI) | (1<<X86_EDI))) & m) do { *((p))++ = (unsigned char)0x50 + (i); } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x0f; *(p)++ = (unsigned char)0xb1; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EBP)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x0f; *(p)++ = (unsigned char)0xb1; do { do { if ((((X86_EAX))) == X86_ESP) { if ((((12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((12))) == 0 && (((X86_EAX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); break; } if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); if ((4) == 1) *(p)++ = (unsigned char)0x86; else *(p)++ = (unsigned char)0x87; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EBP)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); if ((1) == 1) *(p)++ = (unsigned char)0x86; else *(p)++ = (unsigned char)0x87; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EBP)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); if ((4) == 1) *(p)++ = (unsigned char)0x86; else *(p)++ = (unsigned char)0x87; do { do { if ((((X86_EAX))) == X86_ESP) { if ((((12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((12))) == 0 && (((X86_EAX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); break; } if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); if ((2) == 1) *(p)++ = (unsigned char)0x86; else *(p)++ = (unsigned char)0x87; do { do { if ((((X86_EAX))) == X86_ESP) { if ((((12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((12))) == 0 && (((X86_EAX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); break; } if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBP))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); if ((1) == 1) *(p)++ = (unsigned char)0x86; else *(p)++ = (unsigned char)0x87; do { do { if ((((X86_EAX))) == X86_ESP) { if ((((12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((12))) == 0 && (((X86_EAX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); break; } if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0x40 + (X86_EAX); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xff; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xff; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0x90; } while (0);
 do { *(p)++ = (unsigned char)0x90; } while (0);
 do { *(p)++ = (unsigned char)0x48 + (X86_EAX); } while (0);
 do { *(p)++ = (unsigned char)0x48 + (X86_ECX); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xff; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((1))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xff; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((1)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((1)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((1)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((1)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((1)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((1)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((2))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((2))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((2))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((0x4444444))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0x4444444)))) >= -128 && (int)((((0x4444444)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0x4444444)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0x4444444)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0x4444444))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((0x4444444)))) >= -128 && (int)((((0x4444444)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0x4444444)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0x4444444)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((0x4444444))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0x4444444)))) >= -128 && (int)((((0x4444444)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0x4444444)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0x4444444)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0x4444444))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((0x4444444)))) >= -128 && (int)((((0x4444444)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0x4444444)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0x4444444)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_ECX))) == X86_ESP) { if ((((0x4444444))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0x4444444)))) >= -128 && (int)((((0x4444444)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0x4444444)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0x4444444)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0x4444444))) == 0 && (((X86_ECX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ECX))))&0x07))); } while (0); break; } if ((((int)((((0x4444444)))) >= -128 && (int)((((0x4444444)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ECX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0x4444444)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_ECX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0x4444444)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((0))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((0))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((3))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((3))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((3))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { if ((X86_EAX) == X86_EAX) { do {} while (0); *(p)++ = (((unsigned char)(X86_ADD)) << 3) + 5; do { x86_imm_buf imb; imb.val = (int) ((5)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); break; } if ((((int)((5)) >= -128 && (int)((5)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_ADD)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((5)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_ADD)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((5)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((X86_EBX) == X86_EAX) { do {} while (0); *(p)++ = (((unsigned char)(X86_ADD)) << 3) + 5; do { x86_imm_buf imb; imb.val = (int) ((-10)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); break; } if ((((int)((-10)) >= -128 && (int)((-10)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_ADD)))&0x07)<<3)|(((((X86_EBX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((-10)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_ADD)))&0x07)<<3)|(((((X86_EBX)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((-10)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((X86_EDX) == X86_EAX) { do {} while (0); *(p)++ = (((unsigned char)(X86_SUB)) << 3) + 5; do { x86_imm_buf imb; imb.val = (int) ((7)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); break; } if ((((int)((7)) >= -128 && (int)((7)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SUB)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((7)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SUB)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((7)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((X86_ESP) == X86_EAX) { do {} while (0); *(p)++ = (((unsigned char)(X86_OR)) << 3) + 5; do { x86_imm_buf imb; imb.val = (int) ((0xffffedaf)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); break; } if ((((int)((0xffffedaf)) >= -128 && (int)((0xffffedaf)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_OR)))&0x07)<<3)|(((((X86_ESP)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((0xffffedaf)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_OR)))&0x07)<<3)|(((((X86_ESP)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((0xffffedaf)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((X86_ECX) == X86_EAX) { do {} while (0); *(p)++ = (((unsigned char)(X86_CMP)) << 3) + 5; do { x86_imm_buf imb; imb.val = (int) ((1)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); break; } if ((((int)((1)) >= -128 && (int)((1)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_CMP)))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((1)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_CMP)))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((1)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((((int)((2)) >= -128 && (int)((2)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_ADC)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *((p)) = (unsigned char)(((2)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_ADC)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((2)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((((int)((4)) >= -128 && (int)((4)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-4)))) >= -128 && (int)((((-4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-4))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-4)))) >= -128 && (int)((((-4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { *((p)) = (unsigned char)(((4)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-4)))) >= -128 && (int)((((-4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-4))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-4)))) >= -128 && (int)((((-4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((4)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((((int)((0xffffedaf)) >= -128 && (int)((0xffffedaf)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-12)))) >= -128 && (int)((((-12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-12))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-12)))) >= -128 && (int)((((-12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { *((p)) = (unsigned char)(((0xffffedaf)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-12)))) >= -128 && (int)((((-12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-12))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-12)))) >= -128 && (int)((((-12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ADC))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((0xffffedaf)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (((unsigned char)(X86_SUB)) << 3) + 1; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (((unsigned char)(X86_ADD)) << 3) + 3; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((((X86_EBX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (((unsigned char)(X86_ADD)) << 3) + 3; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { if ((X86_EAX) == X86_EAX) { do {} while (0); *(p)++ = (((unsigned char)(X86_ADD)) << 3) + 5; do { x86_imm_buf imb; imb.val = (int) ((0xdeadbeef)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); break; } if ((((int)((0xdeadbeef)) >= -128 && (int)((0xdeadbeef)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x83; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_ADD)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((0xdeadbeef)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x81; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_ADD)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((0xdeadbeef)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (((unsigned char)(X86_XOR)) << 3) + 3; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (((unsigned char)(X86_XOR)) << 3) + 1; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ESI))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ESI))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ESI))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_ESI))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_ESI))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_ESI))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); if ((X86_EAX) == X86_EAX) { *(p)++ = (unsigned char)0xa9; } else { *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((0))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } do { x86_imm_buf imb; imb.val = (int) ((16)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } while (0);
 do { do {} while (0); if ((X86_EDX) == X86_EAX) { *(p)++ = (unsigned char)0xa9; } else { *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((0))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } do { x86_imm_buf imb; imb.val = (int) ((-16)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((1)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((1)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x85; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x85; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x85; do { do { if ((((X86_ESI))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_ESI))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|((((((X86_ESI))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|((((((X86_ESI))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EDX))))&0x07)<<3)|((((((X86_ESI))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { if ((1) == 1) { do {} while (0); *(p)++ = (unsigned char)0xd1; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc1; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((1)) & 0xff); ++((p)); } while (0); } } while (0);
 do { if ((2) == 1) { do {} while (0); *(p)++ = (unsigned char)0xd1; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc1; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((2)) & 0xff); ++((p)); } while (0); } } while (0);
 do { if ((2) == 1) { do {} while (0); *(p)++ = (unsigned char)0xd1; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc1; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *((p)) = (unsigned char)(((2)) & 0xff); ++((p)); } while (0); } } while (0);
 do { if ((4) == 1) { do {} while (0); *(p)++ = (unsigned char)0xd1; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc1; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_SHLR))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { *((p)) = (unsigned char)(((4)) & 0xff); ++((p)); } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd3; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd3; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_SHL)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((4 + ((0) ? 1 : 0)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((4 + ((1) ? 1 : 0)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((4 + ((1) ? 1 : 0))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((4 + ((1) ? 1 : 0))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((4 + ((1) ? 1 : 0))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((4 + ((1) ? 1 : 0))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((4 + ((1) ? 1 : 0))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((4 + ((1) ? 1 : 0))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x0f; *(p)++ = (unsigned char)0xaf; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x0f; *(p)++ = (unsigned char)0xaf; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((12))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((12))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((12)))) >= -128 && (int)((((12)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((12)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((12)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { if ((((int)((10)) >= -128 && (int)((10)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x6b; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); do { *((p)) = (unsigned char)(((10)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x69; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((10)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((((int)((20)) >= -128 && (int)((20)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x6b; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *((p)) = (unsigned char)(((20)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x69; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((20)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((((int)((300)) >= -128 && (int)((300)) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x6b; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((16))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((16)))) >= -128 && (int)((((16)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((16)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((16)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((16))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((16)))) >= -128 && (int)((((16)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((16)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((16)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { *((p)) = (unsigned char)(((300)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x69; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((16))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((16)))) >= -128 && (int)((((16)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((16)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((16)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((16))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((16)))) >= -128 && (int)((((16)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((16)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EBX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((16)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((300)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((6 + ((0) ? 1 : 0)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((6 + ((1) ? 1 : 0)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((6 + ((1) ? 1 : 0)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xf7; do { do { if ((((X86_ESI))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((6 + ((1) ? 1 : 0))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((6 + ((1) ? 1 : 0))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((6 + ((1) ? 1 : 0))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_ESI))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((6 + ((1) ? 1 : 0))))&0x07)<<3)|((((((X86_ESI))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((6 + ((1) ? 1 : 0))))&0x07)<<3)|((((((X86_ESI))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((6 + ((1) ? 1 : 0))))&0x07)<<3)|((((((X86_ESI))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((2)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((1)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((1)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { do { if ((((X86_EBP))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { do { if ((((X86_EAX))) == X86_ESP) { if ((((0))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0))) == 0 && (((X86_EAX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); break; } if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x8a; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x8b; break; default: assert (0); } do { do { if ((((X86_EAX))) == X86_ESP) { if ((((0))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((0))) == 0 && (((X86_EAX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); break; } if ((((int)((((0)))) >= -128 && (int)((((0)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((0)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EAX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((0)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x8a; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x8b; break; default: assert (0); } do { if (((X86_EAX)) == (-1)) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((34))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } else if (((34)) == 0 && ((X86_EAX)) != X86_EBP) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } else if ((((int)(((34))) >= -128 && (int)(((34))) <= 127))) { do { *(((p)))++ = ((((1)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); do { *(((p))) = (unsigned char)((((34))) & 0xff); ++(((p))); } while (0); } else { do { *(((p)))++ = ((((2)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((34))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x8a; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x8b; break; default: assert (0); } do { if ((((-1))) == (-1)) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((34))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } else if (((34)) == 0 && (((-1))) != X86_EBP) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|((((((-1))))&0x07))); } while (0); } else if ((((int)(((34))) >= -128 && (int)(((34))) <= 127))) { do { *(((p)))++ = ((((1)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|((((((-1))))&0x07))); } while (0); do { *(((p))) = (unsigned char)((((34))) & 0xff); ++(((p))); } while (0); } else { do { *(((p)))++ = ((((2)&0x03)<<6)|(((((X86_ECX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|((((((-1))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((34))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x88; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x89; break; default: assert (0); } do { if (((X86_EAX)) == (-1)) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((X86_EDX)))&0x03)<<6)|(((((0)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((X86_EAX))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } else if (((X86_EAX)) == 0 && ((X86_EAX)) != X86_EBP) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((2)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((X86_EDX)))&0x03)<<6)|(((((0)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } else if ((((int)(((X86_EAX))) >= -128 && (int)(((X86_EAX))) <= 127))) { do { *(((p)))++ = ((((1)&0x03)<<6)|(((((2)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((X86_EDX)))&0x03)<<6)|(((((0)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); do { *(((p))) = (unsigned char)((((X86_EAX))) & 0xff); ++(((p))); } while (0); } else { do { *(((p)))++ = ((((2)&0x03)<<6)|(((((2)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((X86_EDX)))&0x03)<<6)|(((((0)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((X86_EAX))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } } while (0); } while (0);
 do { do {} while (0); switch ((1)) { case 1: *(p)++ = (unsigned char)0x8a; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x8b; break; default: assert (0); } do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x8a; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x8b; break; default: assert (0); } do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); switch ((4)) { case 1: *(p)++ = (unsigned char)0x8a; break; case 2: x86_prefix((p), X86_OPERAND_PREFIX); case 4: *(p)++ = (unsigned char)0x8b; break; default: assert (0); } do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xb8 + (X86_EAX); do { x86_imm_buf imb; imb.val = (int) ((10)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } while (0);
 do { if ((4) == 1) { do {} while (0); *(p)++ = (unsigned char)0xc6; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *((p)) = (unsigned char)(((54)) & 0xff); ++((p)); } while (0); } else if ((4) == 2) { do {} while (0); x86_prefix((p), X86_OPERAND_PREFIX); *(p)++ = (unsigned char)0xc7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *(short*)((p)) = ((54)); ((p)) += 2; } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((54)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { if ((1) == 1) { do {} while (0); *(p)++ = (unsigned char)0xc6; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *((p)) = (unsigned char)(((54)) & 0xff); ++((p)); } while (0); } else if ((1) == 2) { do {} while (0); x86_prefix((p), X86_OPERAND_PREFIX); *(p)++ = (unsigned char)0xc7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { *(short*)((p)) = ((54)); ((p)) += 2; } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc7; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((0))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); do { x86_imm_buf imb; imb.val = (int) ((54)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x8d; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { unsigned char op = 0xb6; do {} while (0); *(p)++ = (unsigned char)0x0f; if ((1)) op += 0x08; if ((0)) op += 0x01; *(p)++ = op; do { if (((X86_ECX)) == (-1)) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((0))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } else if (((0)) == 0 && ((X86_ECX)) != X86_EBP) { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); } else if ((((int)(((0))) >= -128 && (int)(((0))) <= 127))) { do { *(((p)))++ = ((((1)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); do { *(((p))) = (unsigned char)((((0))) & 0xff); ++(((p))); } while (0); } else { do { *(((p)))++ = ((((2)&0x03)<<6)|(((((X86_EDX)))&0x07)<<3)|(((4)&0x07))); } while (0); do { *(((p)))++ = ((((((2)))&0x03)<<6)|(((((X86_EBX)))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((0))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } } while (0); } while (0);
 do { *(p)++ = (unsigned char)0x99; } while (0);
 do { *(p)++ = (unsigned char)0x9b; } while (0);
 do { do {} while (0); *(p)++ = (1) ? (unsigned char)0xdc : (unsigned char)0xd8; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_FADD)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (0) ? (unsigned char)0xdc : (unsigned char)0xd8; do { do { *(((p)))++ = ((((0)&0x03)<<6)|(((((X86_FSUB)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd8; *(p)++ = (unsigned char)0xc0+((X86_FSUB)<<3)+((2)&0x07); } while (0);
 do { static const unsigned char map[] = { 0, 1, 2, 3, 5, 4, 7, 6, 8}; do {} while (0); *(p)++ = (0) ? (unsigned char)0xde : (unsigned char)0xdc; *(p)++ = (unsigned char)0xc0+(map[(X86_FMUL)]<<3)+((1)&0x07); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xdd; *(p)++ = (unsigned char)0xd8+(2); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xde; *(p)++ = (unsigned char)0xd9; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xdf; *(p)++ = (unsigned char)0xe0; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((7))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xe0; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xf8; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xc8 + ((3) & 0x07); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xdf; *(p)++ = (unsigned char)0xf0 + ((3) & 0x07); } while (0);
 do { do {} while (0); *(p)++ = (1) ? (unsigned char)0xdd : (unsigned char)0xd9; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (0) ? (unsigned char)0xdd : (unsigned char)0xd9; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xdb; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { do {} while (0); if ((1)) { *(p)++ = (unsigned char)0xdf; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } else { *(p)++ = (unsigned char)0xdb; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } } while (0);
 do { do {} while (0); if ((0)) { *(p)++ = (unsigned char)0xdf; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((5)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } else { *(p)++ = (unsigned char)0xdb; do { do { if ((((X86_ESP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_ESP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_ESP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xc0 + ((4) & 0x07); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xee; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xe8; } while (0);
 do { do {} while (0); *(p)++ = (1) ? (unsigned char)0xdd: (unsigned char)0xd9; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((2 + ((0) ? 1 : 0)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (1) ? (unsigned char)0xdd: (unsigned char)0xd9; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((2 + ((1) ? 1 : 0)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (0) ? (unsigned char)0xdd: (unsigned char)0xd9; do { do { *(((p)))++ = ((((0)&0x03)<<6)|((((2 + ((1) ? 1 : 0)))&0x07)<<3)|(((5)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) (((mem_addr))); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { do {} while (0); if ((1)) { *(p)++ = (unsigned char)0xdf; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } else { *(p)++ = (unsigned char)0xdb; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } } while (0);
 do { do {} while (0); if ((0)) { *(p)++ = (unsigned char)0xdf; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((7)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((7)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } else { *(p)++ = (unsigned char)0xdb; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((3)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((4))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((4)))) >= -128 && (int)((((4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((3)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } } while (0);
 do { *(p)++ = (unsigned char)0x50 + (X86_EBX); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xff; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((6)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((6)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((6)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((6)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((8)))) >= -128 && (int)((((8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((6)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((6)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { int _imm = (int) (-1); if ((((int)(_imm) >= -128 && (int)(_imm) <= 127))) { do {} while (0); *(p)++ = (unsigned char)0x6A; do { *((p)) = (unsigned char)(((_imm)) & 0xff); ++((p)); } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0x68; do { x86_imm_buf imb; imb.val = (int) ((_imm)); *((p))++ = imb.b [0]; *((p))++ = imb.b [1]; *((p))++ = imb.b [2]; *((p))++ = imb.b [3]; } while (0); } } while (0);
 do { *(p)++ = (unsigned char)0x58 + (X86_EBX); } while (0);
 do { *(p)++ = (unsigned char)0x60; } while (0);
 do { *(p)++ = (unsigned char)0x9c; } while (0);
 do { *(p)++ = (unsigned char)0x9d; } while (0);
 do { *(p)++ = (unsigned char)0x61; } while (0);
 target = p;
 start = p;
 x86_jump32 (p, mem_addr);
 do { do { unsigned char* pos = ((start)) + 1; int disp, size = 0; switch (*(unsigned char*)((start))) { case 0xe8: case 0xe9: ++size; break; case 0x0f: if (!(*pos >= 0x70 && *pos <= 0x8f)) assert (0); ++size; ++pos; break; case 0xe0: case 0xe1: case 0xe2: case 0xeb: case 0x70: case 0x71: case 0x72: case 0x73: case 0x74: case 0x75: case 0x76: case 0x77: case 0x78: case 0x79: case 0x7a: case 0x7b: case 0x7c: case 0x7d: case 0x7e: case 0x7f: break; default: assert (0); } disp = ((target)) - pos; if (size) do { x86_imm_buf imb; imb.val = (int) (disp - 4); *(pos)++ = imb.b [0]; *(pos)++ = imb.b [1]; *(pos)++ = imb.b [2]; *(pos)++ = imb.b [3]; } while (0); else if ((((int)(disp - 1) >= -128 && (int)(disp - 1) <= 127))) do { *(pos) = (unsigned char)((disp - 1) & 0xff); ++(pos); } while (0); else assert (0); } while (0); } while (0);
 start = p;
 x86_jump8 (p, 12);
 do { do { unsigned char* pos = ((start)) + 1; int disp, size = 0; switch (*(unsigned char*)((start))) { case 0xe8: case 0xe9: ++size; break; case 0x0f: if (!(*pos >= 0x70 && *pos <= 0x8f)) assert (0); ++size; ++pos; break; case 0xe0: case 0xe1: case 0xe2: case 0xeb: case 0x70: case 0x71: case 0x72: case 0x73: case 0x74: case 0x75: case 0x76: case 0x77: case 0x78: case 0x79: case 0x7a: case 0x7b: case 0x7c: case 0x7d: case 0x7e: case 0x7f: break; default: assert (0); } disp = ((target)) - pos; if (size) do { x86_imm_buf imb; imb.val = (int) (disp - 4); *(pos)++ = imb.b [0]; *(pos)++ = imb.b [1]; *(pos)++ = imb.b [2]; *(pos)++ = imb.b [3]; } while (0); else if ((((int)(disp - 1) >= -128 && (int)(disp - 1) <= 127))) do { *(pos) = (unsigned char)((disp - 1) & 0xff); ++(pos); } while (0); else assert (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0xff; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((4))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0xff; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((16))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((4)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((16)))) >= -128 && (int)((((16)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((4)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((16)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((4)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((16)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((16))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((4)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((16)))) >= -128 && (int)((((16)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((4)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((16)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((4)))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((16)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 x86_jump_code (p, target);
 x86_branch8 (p, X86_CC_EQ, 54, 1);
 x86_branch32 (p, X86_CC_LT, 54, 0);
 x86_branch (p, X86_CC_GT, target, 0);
 do { int offset = (-4) - 2; if ((((int)((offset)) >= -128 && (int)((offset)) <= 127))) x86_branch8 ((p), (X86_CC_NE), offset, (0)); else { offset -= 4; x86_branch32 ((p), (X86_CC_NE), offset, (0)); } } while (0);
 do { g_assert (((X86_EAX) < 4)); do {} while (0); *(p)++ = (unsigned char)0x0f; if ((0)) *(p)++ = x86_cc_signed_map [(X86_CC_EQ)] + 0x20; else *(p)++ = x86_cc_unsigned_map [(X86_CC_EQ)] + 0x20; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((0))&0x07)<<3)|(((((X86_EAX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0x0f; if ((0)) *(p)++ = x86_cc_signed_map [(X86_CC_LE)] + 0x20; else *(p)++ = x86_cc_unsigned_map [(X86_CC_LE)] + 0x20; do { do { if ((((X86_EBP))) == X86_ESP) { if ((((-8))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-8))) == 0 && (((X86_EBP))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); break; } if ((((int)((((-8)))) >= -128 && (int)((((-8)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-8)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|(((((0)))&0x07)<<3)|((((((X86_EBP))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-8)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { int _x86_offset; _x86_offset = (unsigned char*)(printf) - (p); _x86_offset -= 5; do { *((p))++ = (unsigned char)0xe8; do { x86_imm_buf imb; imb.val = (int) ((int)(_x86_offset)); *(((p)))++ = imb.b [0]; *(((p)))++ = imb.b [1]; *(((p)))++ = imb.b [2]; *(((p)))++ = imb.b [3]; } while (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0xff; do { do { *(((p)))++ = ((((3)&0x03)<<6)|((((2))&0x07)<<3)|(((((X86_ECX)))&0x07))); } while (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0x9e; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xfe; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xff; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xe1; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xf3; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xf8; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xf5; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xfc; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xfa; } while (0);
 do { do {} while (0); *(p)++ = (unsigned char)0xd9; *(p)++ = (unsigned char)0xf2; } while (0);
 do { *(p)++ = (unsigned char)0xc9; } while (0);
 do { *(p)++ = (unsigned char)0xc3; } while (0);
 do { if ((24) == 0) { do { *((p))++ = (unsigned char)0xc3; } while (0); } else { do {} while (0); *(p)++ = (unsigned char)0xc2; do { *(short*)((p)) = ((24)); ((p)) += 2; } while (0); } } while (0);
 do { do {} while (0); *(p)++ = (unsigned char) 0x0f; if ((1)) *(p)++ = x86_cc_signed_map [(X86_CC_GT)] - 0x30; else *(p)++ = x86_cc_unsigned_map [(X86_CC_GT)] - 0x30; do { do { *(((p)))++ = ((((3)&0x03)<<6)|(((((X86_EAX)))&0x07)<<3)|(((((X86_EDX)))&0x07))); } while (0); } while (0); } while (0);
 do { do {} while (0); *(p)++ = (unsigned char) 0x0f; if ((0)) *(p)++ = x86_cc_signed_map [(X86_CC_GT)] - 0x30; else *(p)++ = x86_cc_unsigned_map [(X86_CC_GT)] - 0x30; do { do { if ((((X86_EDX))) == X86_ESP) { if ((((-4))) == 0) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); } else if ((((int)((((-4)))) >= -128 && (int)((((-4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { *((((p))))++ = ((((0)&0x03)<<6)|(((X86_ESP)&0x07)<<3)|(((X86_ESP)&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } break; } if ((((-4))) == 0 && (((X86_EDX))) != X86_EBP) { do { *((((p))))++ = ((((0)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); break; } if ((((int)((((-4)))) >= -128 && (int)((((-4)))) <= 127))) { do { *((((p))))++ = ((((1)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { *((((p)))) = (unsigned char)(((((-4)))) & 0xff); ++((((p)))); } while (0); } else { do { *((((p))))++ = ((((2)&0x03)<<6)|((((((X86_EAX))))&0x07)<<3)|((((((X86_EDX))))&0x07))); } while (0); do { x86_imm_buf imb; imb.val = (int) ((((-4)))); *((((p))))++ = imb.b [0]; *((((p))))++ = imb.b [1]; *((((p))))++ = imb.b [2]; *((((p))))++ = imb.b [3]; } while (0); } } while (0); } while (0); } while (0);
 do { *(p)++ = (unsigned char)0x90; } while (0);
 do { unsigned i, m = 1 << X86_EDI; for (i = X86_EDI; m != 0; i--, m=m>>1) { if ((((1<<X86_EBX) | (1<<X86_EBP) | (1<<X86_ESI) | (1<<X86_EDI))) & m) do { *((p))++ = (unsigned char)0x58 + (i); } while (0); } do { *((p))++ = (unsigned char)0xc9; } while (0); do { *((p))++ = (unsigned char)0xc3; } while (0); } while (0);
 size = p-code;
 for (i = 0; i < size; ++i)
  printf (".byte %d\n", (unsigned int) code [i]);
 return 0;
}
