static int _8anon_G_7 (int x, int y) {return x*y;} static int _8anon_G_5 (int x, int y) {return x*y;} static int _8anon_G_3 (int x, int y) {return x*y;} static int _8anon_G_1 (int x, int y) {return x*y;} int G (void) { { int(* _fun)(int x, int y) = _8anon_G_1 ; foo( _fun); }; { int(* _fun)(int x, int y) = _8anon_G_3 ; foo(1, _fun); }; { int(* _fun)(int x, int y) = _8anon_G_5 ; foo(1, 2, _fun); }; { int(* _fun)(int x, int y) = _8anon_G_7 ; foo(1, 2, 3, _fun); }; return 0; }
static int _8anon_myFunctionList_5 (void) { return 3; } static int _8anon_myFunctionList_3 (void) { return 2; } static int _8anon_myFunctionList_1 (void) { return 1; } typedef int(* fptr)(void); fptr functions[] = { _8anon_myFunctionList_1 , _8anon_myFunctionList_3 , _8anon_myFunctionList_5 };
int myGlobalFunc (int blah) { return blah; }
typedef int(* ifptr)(int);
static int _8anon__8anon_someFunc_1_1 (int b) { return b * 6; } static int _8anon_someFunc_1 (int a) { ifptr f = _8anon__8anon_someFunc_1_1 ; return a * f(a + 1); } ifptr someFunc (void) { return _8anon_someFunc_1 ; }
static void _8anon_someFunc1_3 (int c) { printf("Received c: %d\n", c); } static int _8anon_someFunc1_1 (int a, int b) { return (a + b) * (b - a); } int someFunc1 (void) { int foo = _8anon_someFunc1_1 (4, 5); _8anon_someFunc1_3 (47); return foo; }
static int _8anon_someFunc2_1 (int a, int b) { return (a + b) * (b - a); } int someFunc2 (void) { static int(* const helper)(int a, int b) = _8anon_someFunc2_1 ; int foo = helper(4, 5); return helper(foo, 2); }
struct _8anon_makeAdder_3_env_t { void(* _fun)(void *, ...); size_t _size; int x; int y; }; static void _8anon_makeAdder_3(void * _envV, ...) { struct _8anon_makeAdder_3_env_t * _env = _envV; { printf("%d, %d\n", _env->x, _env->y); } } struct _8anon_makeAdder_1_env_t { int(* _fun)(void *, int x); size_t _size; int add; }; static int _8anon_makeAdder_1(void * _envV, int x) { struct _8anon_makeAdder_1_env_t * _env = _envV; { return x + _env->add; } } void makeAdder (void * out_buf, int add) { struct { int (* _fun) (void * , int); size_t _size; } * c = (void*)&(struct _8anon_makeAdder_1_env_t){ _8anon_makeAdder_1,sizeof(struct _8anon_makeAdder_1_env_t) , add } ; memcpy(out_buf, c, c->_size); int x = 42, y = 47; (void*)&(struct _8anon_makeAdder_3_env_t){ _8anon_makeAdder_3,sizeof(struct _8anon_makeAdder_3_env_t) , x , y } ; }
int main(void) {
 return 0;
}
