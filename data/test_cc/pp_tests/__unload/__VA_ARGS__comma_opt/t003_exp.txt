do { if (7 <= log_level) { const char* tname; struct tm tmloc; struct timeval tv; gettimeofday(&tv, NULL); localtime_r(&tv.tv_sec, &tmloc); if (NULL != (tname = log_thread_name_get())) { fprintf(stderr, "%04u-%02u-%02u %02u:%02u:%02u.%03u " "info" " " "%s" " " "ok" "\n", tmloc.tm_year + 1900, tmloc.tm_mon + 1, tmloc.tm_mday, tmloc.tm_hour, tmloc.tm_min, tmloc.tm_sec, (unsigned) tv.tv_usec / 1000, tname); } else { fprintf(stderr, "%04u-%02u-%02u %02u:%02u:%02u.%03u " "info" " " "%lu" " " "ok" "\n", tmloc.tm_year + 1900, tmloc.tm_mon + 1, tmloc.tm_mday, tmloc.tm_hour, tmloc.tm_min, tmloc.tm_sec, (unsigned) tv.tv_usec / 1000, (unsigned long)pthread_self()); } } } while (0);
do { if (7 <= log_level) { const char* tname; struct tm tmloc; struct timeval tv; gettimeofday(&tv, NULL); localtime_r(&tv.tv_sec, &tmloc); if (NULL != (tname = log_thread_name_get())) { fprintf(stderr, "%04u-%02u-%02u %02u:%02u:%02u.%03u " "info" " " "%s" " " "%s" "\n", tmloc.tm_year + 1900, tmloc.tm_mon + 1, tmloc.tm_mday, tmloc.tm_hour, tmloc.tm_min, tmloc.tm_sec, (unsigned) tv.tv_usec / 1000, tname, "ok"); } else { fprintf(stderr, "%04u-%02u-%02u %02u:%02u:%02u.%03u " "info" " " "%lu" " " "%s" "\n", tmloc.tm_year + 1900, tmloc.tm_mon + 1, tmloc.tm_mday, tmloc.tm_hour, tmloc.tm_min, tmloc.tm_sec, (unsigned) tv.tv_usec / 1000, (unsigned long)pthread_self(), "ok"); } } } while (0);
